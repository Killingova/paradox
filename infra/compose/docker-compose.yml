version: "3.9"

services:
  postgres_keycloak:
    image: postgres:16
    container_name: ppx-kc-postgres
    environment:
      POSTGRES_DB: ${KC_DB_NAME:-keycloak}
      POSTGRES_USER: ${KC_DB_USER:-kc}
      POSTGRES_PASSWORD: ${KC_DB_PASS:-kcpass}
      TZ: ${TZ:-Europe/Berlin}
    volumes:
      - kc_pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${KC_DB_USER:-kc} -d ${KC_DB_NAME:-keycloak}"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped
    networks: [core]

  keycloak:
    image: quay.io/keycloak/keycloak:26.0
    container_name: ppx-keycloak
    # Health/Paths liegen unter /auth, deshalb relative path beibehalten:
    command: ["start-dev", "--http-relative-path=/auth", "--hostname-strict=false"]
    environment:
      KEYCLOAK_ADMIN: ${KC_ADMIN_USER:-admin}
      KEYCLOAK_ADMIN_PASSWORD: ${KC_ADMIN_PASS:-admin}
      KC_DB: postgres
      KC_DB_URL: jdbc:postgresql://postgres_keycloak:5432/${KC_DB_NAME:-keycloak}
      KC_DB_USERNAME: ${KC_DB_USER:-kc}
      KC_DB_PASSWORD: ${KC_DB_PASS:-kcpass}
      KC_HEALTH_ENABLED: "true"
      KC_METRICS_ENABLED: "true"
      TZ: ${TZ:-Europe/Berlin}
    depends_on:
      postgres_keycloak:
        condition: service_healthy
    expose:
      - "8080"
    healthcheck:
      # WICHTIG: mit /auth prefix!
      test: ["CMD-SHELL", "curl -fsS http://localhost:8080/auth/health/ready || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 10
    restart: unless-stopped
    networks: [core]

  redis:
    image: redis:7
    container_name: ppx-redis
    command: ["redis-server","--appendonly","yes"]
    volumes:
      - redisdata:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 3s
      retries: 5
    restart: unless-stopped
    networks: [core]

  bff:
    build:
      context: ../../apps/bff
    container_name: ppx-bff
    environment:
      - OIDC_ISSUER=${OIDC_ISSUER}
      - OIDC_CLIENT_ID=${OIDC_CLIENT_ID}
      - OIDC_CLIENT_SECRET=${OIDC_CLIENT_SECRET}
      - OIDC_REDIRECT_URI=${OIDC_REDIRECT_URI}
      - OIDC_POST_LOGOUT_REDIRECT_URI=${OIDC_POST_LOGOUT_REDIRECT_URI}
      - COOKIE_NAME=paradox_sid
      - COOKIE_SECURE=false
      - COOKIE_SAMESITE=Lax
      - REDIS_URL=redis://redis:6379
      - SESSION_TTL_SECONDS=604800
      - PORT=3000
    depends_on:
      keycloak:
        condition: service_started
      redis:
        condition: service_healthy
    expose:
      - "3000"
    restart: unless-stopped
    networks: [core]

  nginx:
    image: nginx:1.27
    container_name: ppx-nginx
    # Variante A: du hast eine komplette nginx.conf â†’ dann so:
    volumes:
      - ../nginx/dev.conf:/etc/nginx/nginx.conf:ro
      # Wenn du stattdessen nur eine server{}-Datei hast,
      # nimm diese Zeile und entferne die obige:
      # - ../nginx/dev.conf:/etc/nginx/conf.d/default.conf:ro
    ports:
      - "80:80"
    depends_on:
      - keycloak
      - bff
    networks: [edge, core]

volumes:
  kc_pgdata:
  redisdata:

networks:
  core:
  edge:
