version: "3.9"

services:
  postgres_keycloak:
    image: postgres:16
    container_name: ppx-kc-postgres
    environment:
      POSTGRES_DB: ${KC_DB_NAME:-keycloak}
      POSTGRES_USER: ${KC_DB_USER:-kc}
      POSTGRES_PASSWORD: ${KC_DB_PASS:-kcpass}
      TZ: Europe/Berlin
    volumes:
      - kc_pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${KC_DB_USER:-kc} -d ${KC_DB_NAME:-keycloak}"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped
    networks:
      - keycloak_net

  keycloak:
    image: quay.io/keycloak/keycloak:26.0
    container_name: ppx-keycloak
    command: start-dev
    environment:
      KEYCLOAK_ADMIN: ${KC_ADMIN_USER:-admin}
      KEYCLOAK_ADMIN_PASSWORD: ${KC_ADMIN_PASS:-admin}
      KC_DB: postgres
      KC_DB_URL: jdbc:postgresql://postgres_keycloak:5432/${KC_DB_NAME:-keycloak}
      KC_DB_USERNAME: ${KC_DB_USER:-kc}
      KC_DB_PASSWORD: ${KC_DB_PASS:-kcpass}
      KC_HEALTH_ENABLED: "true"
      KC_METRICS_ENABLED: "true"
      TZ: Europe/Berlin
    depends_on:
      postgres_keycloak:
        condition: service_healthy
    ports:
      - "8080:8080"
    healthcheck:
      test: ["CMD-SHELL", "curl -fsS http://localhost:8080/health/ready || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 10
    restart: unless-stopped
    networks:
      - keycloak_net

volumes:
  kc_pgdata:

networks:
  keycloak_net:
    driver: bridge
